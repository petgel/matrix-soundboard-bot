/**
 * Method decorator to ensure that only one instance of the method is running at a time,
 * and any concurrent calls will return the same promise as the original call.
 * After execution is complete a new call will be able to run the method again.
 */
export declare function singleAsyncExecution<This, Args extends unknown[], Return>(target: (this: This, ...args: Args) => Promise<Return>): (this: This, ...args: Args) => Promise<Return>;
//# sourceMappingURL=decorators.d.ts.map